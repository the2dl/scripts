name: Deploy Rules and Lists to Chronicle

on:
  push:
    branches:
    # Deploy rules to Chronicle when changes are pushed to the main branch
      - "main"

  # workflow_dispatch allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-execute:
    runs-on: ubuntu-latest  

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: "pip"  # cache pip dependencies to speed up workflow run

      - name: Install dependencies
        run: pip install -r rule_manager/requirements.txt
      
      - name: Get environment built
        run: echo ${{ secrets.MAIN_ENV }} | base64 --decode > .env

      - name: Push new rule
        run: python -m rule_manager.rule_cli update-remote-rules --skip-archived
        
      - name: Push updated lists
        run: python -m rule_manager.rule_cli --update-remote-reference-lists

      # After any changes are made to rules and reference lists in Chronicle, the latest rules and reference lists are retrieved to update the main branch with the latest data (revision_id, revision_create_time, etc).

      - name: Add files to git staging area
        run: git add rule_manager/rules rule_manager/rule_config.yaml rule_manager/reference_lists rule_manager/reference_list_config.yaml

      - name: Run git status command
        run: git status  # For debugging

      - name: Set the username and email to be associated with git commits
        run: |
          git config --global user.email ${{ secrets.GH_USER_EMAIL }}
          git config --global user.name ${{ secrets.GH_USER_NAME }}

      - name: Commit pending changes
        run: |
          # Check if there are uncommitted changes
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "latest content pulled from chronicle api"
            git push
          else
            echo "No changes to commit"
          fi 

      - name: Show last git commit message
        run: git log -1  # For debugging
